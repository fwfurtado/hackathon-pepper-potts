import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.5.RELEASE'
}

apply plugin: 'io.spring.dependency-management'

group = 'br.com.caelum'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def optaplannerVersion = '7.21.0.Final'

subprojects {

    ext['optaplannerVersion'] = optaplannerVersion

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
        mavenLocal()
    }

    group = rootProject.group
    version = rootProject.version
    sourceCompatibility = rootProject.sourceCompatibility
    targetCompatibility = rootProject.targetCompatibility
}

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    mockitoVersion = '2.27.0'
    junitJupiterVersion = '5.4.2'
    junitPlatformVersion = '1.4.2'
    assertJVersion = '3.11.1'
    vavrVersion = '0.9.3'
    ext['optaplannerVersion'] = optaplannerVersion
    swaggerVersion = '2.9.2'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}


dependencies {
    implementation project(":shared")
    implementation project(":allocator")

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.optaplanner:optaplanner-core:${optaplannerVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"

    testImplementation "org.optaplanner:optaplanner-test:${optaplannerVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:${junitPlatformVersion}"
    testCompile "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
}

//dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.kafka:spring-kafka'
//    testImplementation 'org.springframework.kafka:spring-kafka-test'
//}
